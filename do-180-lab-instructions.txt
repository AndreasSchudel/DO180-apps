-------------------------------------------------
Instructions
-------------------------------------------------

-------------------------------------------------
lab manage-storage start

sudo mkdir -pv /var/local/mysql
sudo semanage fcontext -a -t container_file_t '/var/local/mysql(/.*)?'
sudo restorecon -R /var/local/mysql
ls -dZ /var/local/mysql
sudo chown -Rv 27:27 /var/local/mysql
ls -dZ /var/local/mysql
-------------------------------------------------
sudo podman pull rhscl/mysql-57-rhel7
sudo podman run --name persist-db -d -v /var/local/mysql:/var/lib/mysql/data -e MYSQL_USER=user1 -e MYSQL_PASSWORD=mypa55 -e MYSQL_DATABASE=items -e MYSQL_ROOT_PASSWORD=r00tpa55 rhscl/mysql-57-rhel7
sudo podman ps --format="table {{.ID}} {{.Names}} {{.Status}}"
ls -l /var/local/mysql

lab manage-storage finish
-------------------------------------------------

-------------------------------------------------
lab manage-networking start

sudo podman run --name mysqldb-port -d -v /var/local/mysql:/var/lib/mysql/data -p 13306:3306 -e MYSQL_USER=user1 -e MYSQL_PASSWORD=mypa55 -e MYSQL_DATABASE=items -e MYSQL_ROOT_PASSWORD=r00tpa55 rhscl/mysql-57-rhel7
sudo podman ps
sudo podman ps --format="table {{.ID}} {{.Names}} {{.Status}}"
sudo podman port mysqldb-port
-------------------------------------------------
mysql -uuser1 -h 127.0.0.1 -pmypa55 -P13306 items < /home/student/DO180/labs/manage-networking/db.sql
mysql -uuser1 -h 127.0.0.1 -pmypa55 -P13306 items -e "SELECT * FROM Item"
sudo podman exec -it mysqldb-port /bin/bash
which mysql
mysql -uroot items -e "SELECT * FROM Item"
exit
sudo podman exec -it mysqldb-port /opt/rh/rh-mysql57/root/usr/bin/mysql -uroot items -e "SELECT * FROM Item"

lab manage-networking finish
-------------------------------------------------

-------------------------------------------------
lab manage-review start
-------------------------------------------------
1. Create the /var/local/mysql

sudo mkdir -pv /var/local/mysql
sudo semanage fcontext -a -t container_file_t '/var/local/mysql(/.*)?'
sudo restorecon -R /var/local/mysql
sudo chown -Rv 27:27 /var/local/mysql
ls -dZ /var/local/mysql
-------------------------------------------------
2. Deploy a MySQL container instance

sudo podman run --name mysql-1 -d -v /var/local/mysql:/var/lib/mysql/data -e MYSQL_USER=user1 -e MYSQL_PASSWORD=mypa55 -e MYSQL_DATABASE=items -e MYSQL_ROOT_PASSWORD=r00tpa55 rhscl/mysql-57-rhel7
-------------------------------------------------
3. Load the items database
sudo podman inspect -f '{{ .NetworkSettings.IPAddress }}' mysql-1
mysql -uuser1 -h 10.88.0.16 -pmypa55 items < /home/student/DO180/labs/manage-review/db.sql
mysql -uuser1 -h 10.88.0.16 -pmypa55 items -e "SELECT * FROM Item"
-------------------------------------------------
4. Stop the container gracefully
sudo podman stop mysql-1

-------------------------------------------------
5. Create a new container
sudo podman run --name mysql-2 -d -v /var/local/mysql:/var/lib/mysql/data -p 13306:3306 -e MYSQL_USER=user1 -e MYSQL_PASSWORD=mypa55 -e MYSQL_DATABASE=items -e MYSQL_ROOT_PASSWORD=r00tpa55 rhscl/mysql-57-rhel7

-------------------------------------------------
6. Save the list of all containers
sudo podman ps > -a /tmp/my-containers

-------------------------------------------------
7. Access the Bash shell inside the container and verify
sudo podman exec -it mysql-2 /bin/bash
mysql -uroot
show databases;
use items;
show tables;
SELECT * FROM Item;
exit
exit

-------------------------------------------------
8. Using port forwarding, insert a new row
mysql -uuser1 -h workstation.lab.example.com -pmypa55 -P13306 items
insert into Item (description, done) values ('Finished lab', 1);

-------------------------------------------------
9. Because the first container is not required any more, remove it 
sudo podman rm mysql-1

-------------------------------------------------
lab manage-review grade
lab manage-review finish
-------------------------------------------------

-------------------------------------------------
lab image-operations start

sudo podman login quay.io
andreasschudel
PS4_Tim_20

sudo podman run -d --name official-httpd -p 8180:80 redhattraining/httpd-parent
sudo podman exec -it official-httpd /bin/bash
bash-4.4# echo "DO180 Page" > /var/www/html/do180.html
exit
-------------------------------------------------

curl 127.0.0.1:8180/do180.html
sudo podman inspect -f "{{range .Mounts}}{{println .Destination}}{{end}}" official-httpd
sudo podman diff official-httpd
sudo podman stop official-httpd
sudo podman commit -a 'Andreas Schudel' official-httpd do180-custom-httpd
sudo podman images
source /usr/local/etc/ocp4.config
sudo podman tag do180-custom-httpd quay.io/${RHT_OCP4_QUAY_USER}/do180-custom-httpd:v1.0
sudo podman images
sudo podman push quay.io/${RHT_OCP4_QUAY_USER}/do180-custom-httpd:v1.0
sudo podman pull -q quay.io/${RHT_OCP4_QUAY_USER}/do180-custom-httpd:v1.0
sudo podman run -d --name test-httpd -p 8280:80 ${RHT_OCP4_QUAY_USER}/do180-custom-httpd:v1.0
curl http://localhost:8280/do180.html

lab image-operations finish
-------------------------------------------------

-------------------------------------------------
lab image-review start

sudo podman search docker.io/nginx -f is-official=true
sudo podman search nginx
sudo podman pull docker.io/nginx:1.17
sudo podman images
sudo podman run --name official-nginx -d -p 8080:80 docker.io/nginx:1.17
sudo podman exec -it official-nginx /bin/bash
echo "DO180" > /usr/share/nginx/html/index.html
exit
sudo podman stop official-nginx
sudo podman commit -a 'Andreas Schudel' official-nginx do180/mynginx

source /usr/local/etc/ocp4.config
sudo podman tag do180/mynginx quay.io/${RHT_OCP4_QUAY_USER}/do180/mynginx:v1.0-SNAPSHOT

sudo podman run --name official-nginx-dev -d -p 8080:80 mynginx:v1.0-SNAPSHOT
sudo podman exec -it official-nginx-dev /bin/bash
echo "DO180 Page" > /usr/share/nginx/html/index.html
exit
curl http://localhost:8080/index.html

sudo podman stop official-nginx-dev
sudo podman commit -a 'Andreas Schudel' official-nginx-dev do180/mynginx
sudo podman tag do180/mynginx quay.io/${RHT_OCP4_QUAY_USER}/do180/mynginx:v1.0
sudo podman rmi do180/mynginx:v1.0-SNAPSHOT
sudo podman run --name my-nginx -p 8280:80 -d do180/mynginx:v1.0
curl http://localhost:8280/index.html

lab image-review grade
lab image-review finsih
-------------------------------------------------

-------------------------------------------------
lab dockerfile-create start

vim /home/student/DO180/labs/dockerfile-create/Dockerfile

----------
FROM ubi7/ubi:7.7
MAINTAINER Andreas Schudel <andreas.schudel@bluiewin.ch>

LABEL description="A custom Apache container based on UBI 7"
RUN yum install -y httpd && \
    yum clean all
RUN echo "Hello from Dockerfile" > /usr/share/httpd/noindex/index.html

EXPOSE 80

ENTRYPOINT  ["httpd", "-D", "FOREGROUND"]

----------

cat /home/student/DO180/labs/dockerfile-create/Dockerfile
cd /home/student/DO180/labs/dockerfile-create
sudo podman build --layers=false -t do180/apache .
sudo podman images
sudo podman run --name lab-apache -d -p 10080:80 do180/apache
sudo podman ps -a
curl 127.0.0.1:10080

lab dockerfile-create finish
-------------------------------------------------

-------------------------------------------------
lab dockerfile-review start

vim /home/student/DO180/labs/dockerfile-review/Dockerfile

----------
FROM ubi7/ubi:7.7
MAINTAINER Andreas Schudel andreas.schudel@bluewin.ch

ENV PORT 8080

RUN yum install -y httpd && \
    yum clean all

RUN sed -ri -e "/^Listen 80/c\Listen ${PORT}" /etc/httpd/conf/httpd.conf && \
    chown -R apache:apache /etc/httpd/logs/ && \
    chown -R apache:apache /run/httpd/

COPY ./src/ /var/www/html/

USER apache

EXPOSE ${PORT}

CMD ["httpd", "-D", "FOREGROUND"]

----------
cat /home/student/DO180/labs/dockerfile-review/Dockerfile
cd /home/student/DO180/labs/dockerfile-review

sudo podman build --layers=false -t do180/custom-apache .
sudo podman images
sudo podman run --name dockerfile -d -p 20080:8080 do180/custom-apache
sudo podman ps -a
curl 127.0.0.1:20080


lab dockerfile-review grade
lab dockerfile-review finsh
-------------------------------------------------

-------------------------------------------------
lab openshift-resources start

source /usr/local/etc/ocp4.config
oc login -u ${RHT_OCP4_DEV_USER} -p ${RHT_OCP4_DEV_PASSWORD} ${RHT_OCP4_MASTER_API}

oc new-project ${RHT_OCP4_DEV_USER}-mysql-openshift

oc new-app --as-deployment-config --docker-image=registry.access.redhat.com/rhscl/mysql-57-rhel7:latest --name=mysql-openshift -e MYSQL_USER=user1 -e MYSQL_PASSWORD=mypa55 -e MYSQL_DATABASE=testdb -e MYSQL_ROOT_PASSWORD=r00tpa55

oc status
oc get pods -o wide
oc describe pod mysql-openshift-1-hczq5
oc get svc
oc describe svc mysql-openshift
oc describe dc mysql-openshift

oc expose service mysql-openshift
oc get routes

oc port-forward mysql-openshift-1-hczq5  3306:3306
mysql -uuser1 -pmypa55 --protocol tcp -h localhost
show databases;

oc delete project ${RHT_OCP4_DEV_USER}-mysql-openshift

lab openshift-resources finish
-------------------------------------------------

-------------------------------------------------
lab openshift-routes start

source /usr/local/etc/ocp4.config
oc login -u ${RHT_OCP4_DEV_USER} -p ${RHT_OCP4_DEV_PASSWORD} ${RHT_OCP4_MASTER_API}

oc new-project ${RHT_OCP4_DEV_USER}-route
oc new-app --as-deployment-config php:7.3~https://github.com/${RHT_OCP4_GITHUB_USER}/DO180-apps --context-dir php-helloworld --name php-helloworld

oc get pods -w
oc logs -f
oc describe svc/php-helloworld

oc expose svc php-helloworld
oc describe route php-helloworld
curl php-helloworld-${RHT_OCP4_DEV_USER}-route.${RHT_OCP4_WILDCARD_DOMAIN}

oc delete route php-helloworld
oc expose svc php-helloworld --name=${RHT_OCP4_DEV_USER}-xyz
curl ${RHT_OCP4_DEV_USER}-xyz-${RHT_OCP4_DEV_USER}-route.${RHT_OCP4_WILDCARD_DOMAIN}

lab openshift-routes finish
-------------------------------------------------

-------------------------------------------------
lab openshift-s2i start

cd ~/DO180/labs/openshift-s2i
tree s2i-php-container

cd ~/DO180-apps
git checkout master
git checkout -b s2i
git push -u origin s2i

source /usr/local/etc/ocp4.config
oc login -u ${RHT_OCP4_DEV_USER} -p ${RHT_OCP4_DEV_PASSWORD} ${RHT_OCP4_MASTER_API}
oc new-project ${RHT_OCP4_DEV_USER}-s2i

oc new-app --as-deployment-config php:7.3 --name=php-helloworld https://github.com/${RHT_OCP4_GITHUB_USER}/DO180-apps#s2i --context-dir php-helloworld

oc get pods
oc logs --all-containers -f php-helloworld-1-build
oc describe dc/php-helloworld

oc expose service php-helloworld --name ${RHT_OCP4_DEV_USER}-helloworld
oc get route -o jsonpath='{..spec.host}{"\n"}'
curl -s ${RHT_OCP4_DEV_USER}-helloworld-${RHT_OCP4_DEV_USER}-s2i.${RHT_OCP4_WILDCARD_DOMAIN}

cd ~/DO180-apps/php-helloworld
vi index.php
<?php
print "Hello, World! php version is " . PHP_VERSION . "\n";
print "A change is a coming!\n";
?>
git add .
git commit -m 'Changed index page contents.'
git push origin s2i

oc start-build php-helloworld
oc logs php-helloworld-2-build -f
oc get pods -w
curl -s > ${RHT_OCP4_DEV_USER}-helloworld-${RHT_OCP4_DEV_USER}-s2i.${RHT_OCP4_WILDCARD_DOMAIN}

lab openshift-s2i finish
-------------------------------------------------

-------------------------------------------------
lab openshift-webconsole start

cd ~/DO180-apps
git checkout master
git checkout -b console
git push -u origin console

cat /home/student/DO180-apps/php-helloworld/index.php

source /usr/local/etc/ocp4.config
echo $RHT_OCP4_WILDCARD_DOMAIN

https://console-openshift-console.${RHT_OCP4_WILDCARD_DOMAIN}

lab openshift-webconsole finish
-------------------------------------------------

-------------------------------------------------
lab multicontainer-design start

cd ~/DO180/labs/multicontainer-design/images/mysql
sudo podman build -t do180/mysql-57-rhel7 --layers=false .
sudo podman images --format "table {{.ID}} {{.Repository}} {{.Tag}}"

cd ~/DO180/labs/multicontainer-design/deploy/nodejs
sudo podman build -t do180/nodejs --layers=false .
sudo podman images --format "table {{.ID}} {{.Repository}} {{.Tag}}"

cd ~/DO180/labs/multicontainer-design/deploy/nodejs
./build.sh
sudo podman images --format "table {{.ID}} {{.Repository}} {{.Tag}}"

cd /home/student/DO180/labs/multicontainer-design/deploy/nodejs/networked
vi run.sh
./run.sh
curl -w "\n" http://127.0.0.1:30080/todo/api/items/1

lab multicontainer-design finish
-------------------------------------------------


-------------------------------------------------
lab multicontainer-openshift start

cd ~/DO180/labs/multicontainer-openshift/images/mysql
sudo podman build -t do180-mysql-57-rhel7 .
source /usr/local/etc/ocp4.config
sudo podman login quay.io -u ${RHT_OCP4_QUAY_USER}
sudo podman tag do180-mysql-57-rhel7 quay.io/${RHT_OCP4_QUAY_USER}/do180-mysql-57-rhel7
sudo podman push quay.io/${RHT_OCP4_QUAY_USER}/do180-mysql-57-rhel7

cd ~/DO180/labs/multicontainer-openshift
cd images/nodejs
sudo podman build -t do180-nodejs .
cd ~/DO180/labs/multicontainer-openshift
cd deploy/nodejs
./build.sh
sudo podman tag do180/todonodejs quay.io/${RHT_OCP4_QUAY_USER}/do180-todonodejs
sudo podman push quay.io/${RHT_OCP4_QUAY_USER}/do180-todonodejs

oc login -u ${RHT_OCP4_DEV_USER} -p ${RHT_OCP4_DEV_PASSWORD} ${RHT_OCP4_MASTER_API}
oc new-project ${RHT_OCP4_DEV_USER}-template

cd /home/student/DO180/labs/multicontainer-openshift
less todo-template.json

cd /home/student/DO180/labs/multicontainer-openshift
oc process -f todo-template.json -p RHT_OCP4_QUAY_USER=${RHT_OCP4_QUAY_USER} | oc create -f -

oc get pods
oc get svc
oc expose service todoapi
oc get route
->todoapi-andreas-schudel-cloudops-template.apps.eu45.prod.nextcle.com

curl -w "\n" http://todoapi-andreas-schudel-cloudops-template.apps.eu45.prod.nextcle.com/todo/api/items/1

Browser:
http://todoapi-andreas-schudel-cloudops-template.apps.eu45.prod.nextcle.com/todo/

lab multicontainer-openshift finish
-------------------------------------------------


-------------------------------------------------
lab multicontainer-review start

cd ~/DO180/labs/multicontainer-review
source /usr/local/etc/ocp4.config

oc login -u ${RHT_OCP4_DEV_USER} -p ${RHT_OCP4_DEV_PASSWORD} ${RHT_OCP4_MASTER_API}
oc new-project ${RHT_OCP4_DEV_USER}-review

cd ~/DO180/labs/multicontainer-review/images/mysql
sudo podman login quay.io -u ${RHT_OCP4_QUAY_USER}
sudo podman build -t do180-mysql-57-rhel7 .
sudo podman images
sudo podman tag do180-mysql-57-rhel7 quay.io/${RHT_OCP4_QUAY_USER}/do180-mysql-57-rhel7
sudo podman images
sudo podman push quay.io/${RHT_OCP4_QUAY_USER}/do180-mysql-57-rhel7

cd ~/DO180/labs/multicontainer-review/images/quote-php
sudo podman build -t do180-quote-php .
sudo podman images
sudo podman tag do180-quote-php quay.io/${RHT_OCP4_QUAY_USER}/do180-quote-php
sudo podman images
sudo podman push quay.io/${RHT_OCP4_QUAY_USER}/do180-quote-php

cd ~/DO180/labs/multicontainer-review
oc create -f quote-php-template.json
oc process -f quote-php-template.json -p RHT_OCP4_QUAY_USER=${RHT_OCP4_QUAY_USER} | oc create -f -
oc expose service quote-php

curl -w "\n" http://quote-php-andreas-schudel-cloudops-review.apps.eu45.prod.nextcle.com
Browser:
http://quote-php-andreas-schudel-cloudops-review.apps.eu45.prod.nextcle.com

oc delete project ${RHT_OCP4_DEV_USER}-review

oc new-project ${RHT_OCP4_DEV_USER}-deploy
oc create -f quote-php-template.json
oc process quote-php-persistent -p RHT_OCP4_QUAY_USER=${RHT_OCP4_QUAY_USER} | oc create -f -
oc expose service quote-php

curl -w "\n" http://quote-php-andreas-schudel-cloudops-deploy.apps.eu45.prod.nextcle.com
Browser:
http://deploy.apps.eu45.prod.nextcle.com.apps.eu45.prod.nextcle.com

lab multicontainer-review grade
lab multicontainer-review finish
-------------------------------------------------

-------------------------------------------------
lab troubleshoot-s2i start

source /usr/local/etc/ocp4.config

cd ~/DO180-apps
git checkout master
git checkout -b troubleshoot-s2i
git push -u origin troubleshoot-s2i

oc login -u "${RHT_OCP4_DEV_USER}" -p "${RHT_OCP4_DEV_PASSWORD}"
oc new-project ${RHT_OCP4_DEV_USER}-nodejs

oc new-app --as-deployment-config --context-dir=nodejs-helloworld https://github.com/${RHT_OCP4_GITHUB_USER}/DO180-apps#troubleshoot-s2i -i nodejs:12 --name nodejs-hello --build-env npm_config_registry=http://${RHT_OCP4_NEXUS_SERVER}/repository/npm-proxy

oc get pods -w
oc logs bc/nodejs-hello
cd nodejs-helloworld
vi package.json
git commit -am "Fixed Express release"
git push

cd ..
oc start-build bc/nodejs-hello
oc get pods
oc logs dc/nodejs-hello


cd nodejs-helloworld
vi package.json
  "scripts": {
    "start": "node app.js"
  },
git commit -am "Added start up script"
git push

cd ..
oc start-build bc/nodejs-hello
oc get pods
oc logs dc/nodejs-hello

oc expose svc/nodejs-hello
oc get route -o yaml
curl -w "\n" http://nodejs-hello-andreas-schudel-cloudops-nodejs.apps.eu45.prod.nextcle.com

lab troubleshoot-s2i finish
-------------------------------------------------

-------------------------------------------------
lab troubleshoot-container start

cat /home/student/DO180/labs/troubleshoot-container/conf/httpd.conf
cd ~/DO180/labs/troubleshoot-container

sudo podman build -t troubleshoot-container .
cd ~
sudo podman images
sudo podman run --name troubleshoot-container -d -p 10080:80 troubleshoot-container
sudo podman logs troubleshoot-container

curl http://127.0.0.1:10080
sudo podman logs troubleshoot-container


lab troubleshoot-container finish
-------------------------------------------------

-------------------------------------------------
lab troubleshoot-review start

source /usr/local/etc/ocp4.config
cd ~/DO180-apps
git checkout master
git checkout -b troubleshoot-review
git push -u origin troubleshoot-review

oc login -u "${RHT_OCP4_DEV_USER}" -p "${RHT_OCP4_DEV_PASSWORD}"
oc new-project ${RHT_OCP4_DEV_USER}-nodejs

oc new-app --as-deployment-config --context-dir=nodejs-app https://github.com/${RHT_OCP4_GITHUB_USER}/DO180-apps#troubleshoot-review -i nodejs:12 --name nodejs-dev --build-env npm_config_registry=http://${RHT_OCP4_NEXUS_SERVER}/repository/npm-proxy

cd nodejs-app
vi package.json
git add .
git commit -m "version changed"
git push
cd ..
oc start-build bc/nodejs-dev

cd nodejs-app
vi package.json
git add .
git commit -m "module fixed"
git push
cd ..
oc start-build bc/nodejs-dev


oc get svc
oc expose svc/nodejs-dev
oc get route

curl -w "\n" oc nodejs-dev-andreas-schudel-cloudops-nodejs.apps.eu45.prod.nextcle.com

cd nodejs-app
sed -i s/process.environment/process.env/ server.js
cat server.js
git add .
git commit -m "fixed process.env"
git push
cd ..
oc start-build bc/nodejs-dev

curl -w "\n" oc nodejs-dev-andreas-schudel-cloudops-nodejs.apps.eu45.prod.nextcle.com

git add .
git commit -m "other fixes"
git push
cd ..

curl nodejs-dev-andreas-schudel-cloudops-nodejs-app.apps.eu45.prod.nextcle.com
curl nodejs-dev-andreas-schudel-cloudops-nodejs.apps.eu45.prod.nextcle.com

oc delete project ${RHT_OCP4_DEV_USER}-nodejs


oc new-project ${RHT_OCP4_DEV_USER}-nodejs-app
oc new-app --as-deployment-config --context-dir=nodejs-app https://github.com/${RHT_OCP4_GITHUB_USER}/DO180-apps#troubleshoot-review -i nodejs:12 --name nodejs-dev --build-env npm_config_registry=http://${RHT_OCP4_NEXUS_SERVER}/repository/npm-proxy


lab troubleshoot-review grade
lab troubleshoot-review finish
-------------------------------------------------

-------------------------------------------------
lab comprehensive-review start

cd /home/student/DO180/labs/comprehensive-review/image
./get-nexus-bundle.sh

vi Dockerfile
sudo podman build -t nexus .
sudo podman images

cd /home/student/DO180/labs/comprehensive-review
cd deploy/local
./run-persistent.sh

sudo podman ps --format="table {{.ID}} {{.Names}} {{.Image}}"
sudo podman logs -f nostalgic_shirley
sudo podman kill nostalgic_shirley

source /usr/local/etc/ocp4.config
sudo podman login -u ${RHT_OCP4_QUAY_USER} quay.io
sudo podman push localhost/nexus:latest quay.io/${RHT_OCP4_QUAY_USER}/nexus:latest

cd ~/DO180/labs/comprehensive-review/deploy/openshift
oc login -u ${RHT_OCP4_DEV_USER} -p ${RHT_OCP4_DEV_PASSWORD} ${RHT_OCP4_MASTER_API}
oc new-project ${RHT_OCP4_DEV_USER}-review

oc process -f resources/nexus-template.json -p RHT_OCP4_QUAY_USER=${RHT_OCP4_QUAY_USER} | oc create -f -
oc expose svc/nexus
oc get route -o yaml

http://nexus-andreas-schudel-cloudops-review.apps.eu45.prod.nextcle.com/nexus/.

lab comprehensive-review grade
lab comprehensive-review finish
-------------------------------------------------


-------------------------------------------------
-------------------------------------------------


